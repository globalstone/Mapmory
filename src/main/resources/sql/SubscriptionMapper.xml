<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapmory.services.purchase.dao.SubscriptionDao">
	<resultMap id="subscriptionSelectMap" type="subscription">
		<result property="subscriptionNo"					column="subscription_no"							jdbcType="INTEGER"/>
		<result property="userId"							column="user_id"									jdbcType="VARCHAR"/>
		<result property="nextSubscriptionPaymentMethod"	column="next_subscription_payment_method" 			jdbcType="INTEGER" />
		<result property="nextSubscriptionCardType"			column="next_subscription_card_type"				jdbcType="VARCHAR" />
		<result property="nextSubscriptionLastFourDigits"	column="next_subscription_last_four_digits"			jdbcType="VARCHAR" />
		<result property="nextSubscriptionPaymentDate"		column="next_subscription_payment_date"				jdbcType="TIMESTAMP"  />
		<result property="subscriptionStartDate"			column="subscription_start_date"					jdbcType="TIMESTAMP" />
		<result property="subscriptionEndDate"				column="subscription_end_date"						jdbcType="TIMESTAMP"  />
		<result property="customerUid"						column="customer_uid"								jdbcType="VARCHAR"  />
		<result property="merchantUid"						column="merchant_uid"								jdbcType="VARCHAR"  />
		<result property="isSubscribed"						column="is_subscribed"								jdbcType="BOOLEAN"  />
	</resultMap>
	
	<insert id="addSubscription" parameterType="subscription" useGeneratedKeys="true" keyProperty="subscriptionNo">
		INSERT INTO subscription (
					user_id,
					next_subscription_payment_method,
					next_subscription_card_type,
					next_subscription_last_four_digits,
					next_subscription_payment_date,
					subscription_start_date,
					subscription_end_date,
					customer_uid,
					merchant_uid)
				VALUES (
					#{userId},
					#{nextSubscriptionPaymentMethod},
					#{nextSubscriptionCardType, jdbcType=VARCHAR},
					#{nextSubscriptionLastFourDigits, jdbcType=VARCHAR},
					#{nextSubscriptionPaymentDate},
					#{subscriptionStartDate},
					#{subscriptionEndDate},
					#{customerUid},
					#{merchantUid}
				)
	</insert>
	
	<select id="getDetailSubscription" parameterType="string" resultMap="subscriptionSelectMap">
		SELECT
			subscription_no,
			user_id,
			next_subscription_payment_method,
			next_subscription_card_type,
			next_subscription_last_four_digits,
			next_subscription_payment_date,
			subscription_start_date,
			subscription_end_date,
			customer_uid,
			merchant_uid,
			IF(NOW() BETWEEN subscription_start_date AND subscription_end_date, 1, 0) AS is_subscribed
		FROM
			subscription
		WHERE
			user_id = #{userId}
		ORDER BY
			subscription_end_date DESC
		LIMIT 1;
	</select>
	
	<select id="getSubscriptionList" parameterType="search" resultMap="subscriptionSelectMap">
		SELECT
			subscription_no,
			user_id,
			next_subscription_payment_method,
			next_subscription_card_type,
			next_subscription_last_four_digits,
			next_subscription_payment_date,
			subscription_start_date,
			subscription_end_date,
			customer_uid,
			merchant_uid,
			IF(NOW() BETWEEN subscription_start_date AND subscription_end_date, 1, 0) AS is_subscribed
		FROM
			subscription
		WHERE
			user_id = #{searchKeyword}
		ORDER BY
			subscription_end_date DESC
		LIMIT #{pageSize} OFFSET #{offset}
	</select>
	
	<update id="updatePaymentMethod" parameterType='subscription'>
		UPDATE 
			subscription 
		<set>
			next_subscription_payment_method = #{nextSubscriptionPaymentMethod}, 
			next_subscription_card_type = #{nextSubscriptionCardType}, 
			next_subscription_last_four_digits = #{nextSubscriptionLastFourDigits} 
		</set>
		WHERE 
			user_id = #{userId} 
			AND NOW() BETWEEN subscription_start_date AND subscription_end_date;
	</update>
	
	<update id="cancelSubscription" parameterType="string">
		UPDATE 
			subscription
		SET
			next_subscription_payment_date = null
		WHERE 
			user_id = #{userId} 
			AND NOW() BETWEEN subscription_start_date AND subscription_end_date
	</update>
	
	<update id="reSubscription" parameterType="subscription">
		UPDATE 
			subscription
		SET
			next_subscription_payment_date = subscription_end_date, merchant_uid = #{merchantUid}
		WHERE 
			user_id = #{userId}
			AND NOW() BETWEEN subscription_start_date AND subscription_end_date
	</update>
	
	<delete id="deleteSubscription" parameterType="int">
		DELETE FROM 
			subscription
		WHERE 
			subscription_no = #{subscriptionNo}
	</delete>
	
	<!-- 추가 메소드 -->
	
	<select id="getTodaySubscriptionList" resultMap="subscriptionSelectMap">
		SELECT 
			subscription_no,
			user_id, 
			next_subscription_payment_method,
			next_subscription_card_type,
			next_subscription_last_four_digits,
			next_subscription_payment_date,
			subscription_start_date,
			subscription_end_date,
			customer_uid,
			merchant_uid
		FROM 
			subscription
		WHERE 
			DATE(next_subscription_payment_date) = CURDATE(); <!-- 오늘 날짜까지 같은 경우--> 
	</select>
	
</mapper>